<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADrWlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9i
        ZS5jb20veGFwLzEuMC9yaWdodHMvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAv
        MS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNv
        dXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wUmlnaHRz
        Ok1hcmtlZD0iRmFsc2UiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0idXVpZDpBRTNGNDYwODhGODlE
        RTExQTg2MDk5RjEyMUEyMDQyOSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4REE4MURGNkI1RUYx
        MUUwQkFBM0JCRTREN0IxMzUxRCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4REE4MURGNUI1RUYx
        MUUwQkFBM0JCRTREN0IxMzUxRCIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
        bmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDozMkVCOTQ0
        REVGQjVFMDExOUFCNEFGRDkwMzlGMzVFQiIgc3RSZWY6ZG9jdW1lbnRJRD0idXVpZDpBRTNGNDYwODhG
        ODlERTExQTg2MDk5RjEyMUEyMDQyOSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6
        eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PslgTzsAAAH+SURBVFhHxZfdSxRRGMbnXxO66KILb7rx
        JiSSCAkJ0Qx1oBC8MBAq1iKKpJX1q2AoyFU0cs3a7SJoWYhECi+2VXPXXXddP+DpnNoTs2+Pq5yB2Ysf
        c86c933mN3Mz5zgAnGbS1IfrF68TcGc+uQqEgGu+uhT47+G71WMEhb3QmQXy+0cYW8hYo/vPLDA4k4Lk
        V+UQQWG59AsMTKcg2Sof4H48bY3uZ7lUoH8qCUmuVEVQWC4VuDX5EZJssYq7rz5bo/tZLhXoi32AZKNQ
        QVBYLhXonViF5PtOGXdepKzR/SyXCvRE30Oytr2HoLBcKtD9fAWSr5tF3IwmrNH9LJcK3BhPQJLJ7SIo
        LJcKdD1bhiSdLeBKZM4a3c9yqcD1p+8gmU6u44sKsUX3s1wq0PnkLcKCClx7vISwoAJXHy0iLKhAx8MF
        hAUVuByZR1hQgfYHcYQFFbh07w0YxYNj2CLyPDOnAm2jr8HQ2ypbRJ5n5lTg4ogHht7VGOS6f42NRb1n
        5lSgdfilp4BEbyoMjdb8daReZxvU8/8eiOq25ReGZh0FJD/yZRgarfnrTqj3TD8VOH97yqkBdf3Ht60S
        DP77euxfY2NZb+ZU4Jwbc3xAjf+Q+al+yTXMPbbmrzup3vRRgZaBCUfgqXndn1DP/Zz2l5T1tTk/mjXj
        lNz00/FvO54qN3wnoyIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>